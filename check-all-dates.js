require('dotenv').config({ path: './admin-panel/.env.local' });
const admin = require('firebase-admin');

const projectId = process.env.FIREBASE_PROJECT_ID;
const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;
const privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n');

if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert({ projectId, clientEmail, privateKey }),
  });
}

const db = admin.firestore();

async function checkAllDates() {
  console.log('üîç ÂÖ®Êó•Â†±„ÅÆÊó•‰ªò„ÇíÁ¢∫Ë™ç‰∏≠...\n');

  // reportDate„Åß„ÇΩ„Éº„Éà
  const reportsSnapshot = await db.collection('daily_reports')
    .orderBy('reportDate', 'desc')
    .get();

  console.log(`üìñ ÂÖ®Êó•Â†±„Éá„Éº„Çø: ${reportsSnapshot.size} ‰ª∂\n`);
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

  const dateGroups = {};

  reportsSnapshot.forEach((doc) => {
    const data = doc.data();
    const reportDate = data.reportDate;

    if (!dateGroups[reportDate]) {
      dateGroups[reportDate] = [];
    }

    dateGroups[reportDate].push({
      id: doc.id.substring(0, 8),
      customer: data.customerAttributes?.substring(0, 40) || '„Å™„Åó',
      createdAt: data.createdAt?.toDate().toISOString().substring(0, 19)
    });
  });

  // Êó•‰ªò„Åî„Å®„Å´Ë°®Á§∫
  const sortedDates = Object.keys(dateGroups).sort().reverse();

  sortedDates.forEach((date) => {
    const reports = dateGroups[date];
    const count = reports.length;

    console.log(`üìÖ ${date} (${count}‰ª∂)${count > 1 ? ' ‚ö†Ô∏è ÈáçË§á„ÅÇ„Çä' : ''}`);

    reports.forEach((report, index) => {
      console.log(`   ${index + 1}. ID: ${report.id}... | ${report.customer}`);
      console.log(`      ÁôªÈå≤Êó•ÊôÇ: ${report.createdAt}`);
    });
    console.log('');
  });

  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');

  // „Çµ„Éû„É™„Éº
  console.log('üìä „Çµ„Éû„É™„Éº:');
  console.log(`   ÂÖ®Êó•Â†±‰ª∂Êï∞: ${reportsSnapshot.size} ‰ª∂`);
  console.log(`   Áï∞„Å™„ÇãÊó•‰ªò: ${sortedDates.length} Êó•ÂàÜ`);

  const duplicates = sortedDates.filter(date => dateGroups[date].length > 1);
  if (duplicates.length > 0) {
    console.log(`   ÈáçË§á„ÅÆ„ÅÇ„ÇãÊó•‰ªò: ${duplicates.length} Êó•`);
    console.log(`\n   ÈáçË§á„Åó„Å¶„ÅÑ„ÇãÊó•‰ªò:`);
    duplicates.forEach(date => {
      console.log(`   - ${date}: ${dateGroups[date].length} ‰ª∂`);
    });
  } else {
    console.log(`   ‚úÖ ÈáçË§á„Å™„Åó`);
  }

  process.exit(0);
}

checkAllDates().catch(err => {
  console.error('‚ùå „Ç®„É©„Éº:', err);
  process.exit(1);
});
