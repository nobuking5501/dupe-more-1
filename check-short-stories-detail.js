require('dotenv').config({ path: '.env.local' });
const admin = require('firebase-admin');

const projectId = process.env.FIREBASE_PROJECT_ID;
const clientEmail = process.env.FIREBASE_CLIENT_EMAIL;
const privateKey = process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n');

if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.cert({ projectId, clientEmail, privateKey }),
  });
}

const db = admin.firestore();

async function checkShortStoriesDetail() {
  console.log('üîç Â∞èË©±„Éá„Éº„Çø„ÅÆË©≥Á¥∞Á¢∫Ë™ç‰∏≠...\n');

  // „Åô„Åπ„Å¶„ÅÆÂ∞èË©±„ÇíÂèñÂæó
  const storiesSnapshot = await db.collection('short_stories').orderBy('createdAt', 'desc').limit(10).get();

  console.log(`üìñ Â∞èË©±„Éá„Éº„Çø: ${storiesSnapshot.size} ‰ª∂ÔºàÊúÄÊñ∞10‰ª∂Ôºâ\n`);

  storiesSnapshot.forEach((doc, index) => {
    const data = doc.data();
    console.log(`--- Â∞èË©± ${index + 1} ---`);
    console.log(`ID: ${doc.id}`);
    console.log(`„Çø„Ç§„Éà„É´: ${data.title}`);
    console.log(`status: ${data.status}`);
    console.log(`isFeatured: ${data.isFeatured}`);
    console.log(`reportDate: ${data.reportDate}`);
    console.log(`content: ${data.content?.substring(0, 100)}...`);
    console.log(`createdAt: ${data.createdAt?.toDate().toISOString()}`);
    console.log('');
  });

  // status='active' AND isFeatured=true „ÅÆ„ÇØ„Ç®„É™„ÇíÂÆüË°å
  console.log('\nüîç „Éï„Ç£„Éº„ÉÅ„É£„ÉºÂ∞èË©±„ÅÆ„ÇØ„Ç®„É™ÂÆüË°å‰∏≠...');
  console.log('„ÇØ„Ç®„É™: status==active AND isFeatured==true\n');

  try {
    const featuredSnapshot = await db
      .collection('short_stories')
      .where('status', '==', 'active')
      .where('isFeatured', '==', true)
      .orderBy('createdAt', 'desc')
      .limit(1)
      .get();

    if (featuredSnapshot.empty) {
      console.log('‚ùå „Éï„Ç£„Éº„ÉÅ„É£„ÉºÂ∞èË©±„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      console.log('ÂéüÂõ†: status="active" „Åã„Å§ isFeatured=true „ÅÆ„Éá„Éº„Çø„ÅåÂ≠òÂú®„Åó„Å™„ÅÑ');
    } else {
      const doc = featuredSnapshot.docs[0];
      const data = doc.data();
      console.log('‚úÖ „Éï„Ç£„Éº„ÉÅ„É£„ÉºÂ∞èË©±„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åó„Åü:');
      console.log(`ID: ${doc.id}`);
      console.log(`„Çø„Ç§„Éà„É´: ${data.title}`);
      console.log(`content: ${data.content?.substring(0, 200)}...`);
    }
  } catch (error) {
    console.error('‚ùå „ÇØ„Ç®„É™„Ç®„É©„Éº:', error.message);
    if (error.message.includes('index')) {
      console.log('\nüí° Ëß£Ê±∫ÊñπÊ≥ï: Firestore„Ç≥„É≥„ÇΩ„Éº„É´„Åß„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
    }
  }

  process.exit(0);
}

checkShortStoriesDetail().catch(err => {
  console.error('‚ùå „Ç®„É©„Éº:', err);
  process.exit(1);
});
